{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vadim\\\\React\\\\spacex_task\\\\spacex_task\\\\src\\\\components\\\\MainContent\\\\ShipmentInformationBlock\\\\ShipmentInformationBlock.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport \"./ShipmentInformationBlock.scss\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport store from \"../../../reducers/ShipmentReducer\";\n\n// const initialCargoBaysRequired = () => {\n//   const companyBoxesInitialAmount = useSelector((state) => state.boxes);\n//   console.log(companyBoxesInitialAmount)\n// }\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ShipmentInformationBlock = () => {\n  _s();\n  let [cargoBaysRequired, setCargoBaysRequired] = useState(0);\n  const companyName = useSelector(state => state.name);\n  const companyEmail = useSelector(state => state.email);\n  const companyBoxes = useSelector(state => state.boxes);\n\n  // const dispatch = useDispatch(store);\n\n  console.log(companyName, companyEmail, companyBoxes);\n  let cargoBaysRequiredAsStringsArr = companyBoxes.split(/[,]/);\n  let cargoBaysRequiredAsFloatsArr = cargoBaysRequiredAsStringsArr.map(parseFloat);\n  let userInput = companyBoxes;\n  // console.log(\"TOP USER INPUT: \", userInput);\n\n  useEffect(() => {\n    console.log(\"useEffect: \", companyName, companyBoxes);\n\n    // setCargoBaysRequired(0)\n  }, [companyName]);\n  const convertNumbersToCargoBays = input => {\n    const splitCurrentArray = input.split(/[,]/);\n    const newArray = splitCurrentArray.map(parseFloat);\n    const sumArray = arr => arr.reduce((a, b) => a + Number(b), 0);\n    const roundedNumber = Math.ceil(sumArray(newArray, 1));\n    return Math.ceil(roundedNumber / 10, 1);\n  };\n  const calculateInitialCargoBays = boxes => {\n    cargoBaysRequired = convertNumbersToCargoBays(companyBoxes);\n    setCargoBaysRequired(cargoBaysRequired);\n  };\n  const calculateCargoBays = event => {\n    userInput = event.target.value;\n    console.log(\"userInput: \", userInput);\n    if (isNaN(convertNumbersToCargoBays(userInput))) {\n      console.log(\"ERROR\");\n    } else {\n      cargoBaysRequired = convertNumbersToCargoBays(userInput);\n      console.log(\"requred: \", cargoBaysRequired);\n      setCargoBaysRequired(cargoBaysRequired);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"shipmentinfo-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: companyName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: companyEmail\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"CARGO BOXES\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: calculateCargoBays,\n      type: \"text\",\n      defaultValue: companyBoxes\n      // value={companyBoxes}\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Number of required cargo bays\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: cargoBaysRequired\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_s(ShipmentInformationBlock, \"mUXU0kEKLJ00D2zk+j5vwsE/SG4=\", false, function () {\n  return [useSelector, useSelector, useSelector];\n});\n_c = ShipmentInformationBlock;\nexport default ShipmentInformationBlock;\nvar _c;\n$RefreshReg$(_c, \"ShipmentInformationBlock\");","map":{"version":3,"names":["React","useEffect","useState","useSelector","useDispatch","store","jsxDEV","_jsxDEV","ShipmentInformationBlock","_s","cargoBaysRequired","setCargoBaysRequired","companyName","state","name","companyEmail","email","companyBoxes","boxes","console","log","cargoBaysRequiredAsStringsArr","split","cargoBaysRequiredAsFloatsArr","map","parseFloat","userInput","convertNumbersToCargoBays","input","splitCurrentArray","newArray","sumArray","arr","reduce","a","b","Number","roundedNumber","Math","ceil","calculateInitialCargoBays","calculateCargoBays","event","target","value","isNaN","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","type","defaultValue","_c","$RefreshReg$"],"sources":["C:/Users/Vadim/React/spacex_task/spacex_task/src/components/MainContent/ShipmentInformationBlock/ShipmentInformationBlock.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport \"./ShipmentInformationBlock.scss\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport store from \"../../../reducers/ShipmentReducer\";\r\n\r\n// const initialCargoBaysRequired = () => {\r\n//   const companyBoxesInitialAmount = useSelector((state) => state.boxes);\r\n//   console.log(companyBoxesInitialAmount)\r\n// }\r\n\r\nconst ShipmentInformationBlock = () => {\r\n  let [cargoBaysRequired, setCargoBaysRequired] = useState(0);\r\n\r\n  const companyName = useSelector((state) => state.name);\r\n  const companyEmail = useSelector((state) => state.email);\r\n  const companyBoxes = useSelector((state) => state.boxes);\r\n\r\n  // const dispatch = useDispatch(store);\r\n\r\n  console.log(companyName, companyEmail, companyBoxes);\r\n\r\n  let cargoBaysRequiredAsStringsArr = companyBoxes.split(/[,]/);\r\n  let cargoBaysRequiredAsFloatsArr =\r\n    cargoBaysRequiredAsStringsArr.map(parseFloat);\r\n  let userInput = companyBoxes;\r\n  // console.log(\"TOP USER INPUT: \", userInput);\r\n\r\n  useEffect(() => {\r\n    console.log(\"useEffect: \", companyName, companyBoxes);\r\n\r\n\r\n    // setCargoBaysRequired(0)\r\n  }, [companyName]);\r\n\r\n\r\n\r\n  const convertNumbersToCargoBays = (input) => {\r\n    const splitCurrentArray = input.split(/[,]/);\r\n    const newArray = splitCurrentArray.map(parseFloat);\r\n    const sumArray = (arr) => arr.reduce((a, b) => a + Number(b), 0);\r\n    const roundedNumber = Math.ceil(sumArray(newArray, 1));\r\n    return Math.ceil(roundedNumber / 10, 1);\r\n  };\r\n\r\n  const calculateInitialCargoBays = (boxes) => {\r\n    cargoBaysRequired = convertNumbersToCargoBays(companyBoxes);\r\n    setCargoBaysRequired(cargoBaysRequired)\r\n  }\r\n\r\n  const calculateCargoBays = (event) => {\r\n    userInput = event.target.value;\r\n\r\n    console.log(\"userInput: \", userInput);\r\n\r\n    if (isNaN(convertNumbersToCargoBays(userInput))) {\r\n      console.log(\"ERROR\");\r\n    } else {\r\n      cargoBaysRequired = convertNumbersToCargoBays(userInput);\r\n      console.log(\"requred: \", cargoBaysRequired);\r\n      setCargoBaysRequired(cargoBaysRequired);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"shipmentinfo-container\">\r\n      <h1>{companyName}</h1>\r\n      <h4>{companyEmail}</h4>\r\n      <h3>CARGO BOXES</h3>\r\n      <input\r\n        onChange={calculateCargoBays}\r\n        type=\"text\"\r\n        defaultValue={companyBoxes}\r\n        // value={companyBoxes}\r\n      />\r\n      <h2>Number of required cargo bays</h2>\r\n      <label>{cargoBaysRequired}</label>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ShipmentInformationBlock;\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}