{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vadim\\\\React\\\\spacex_task\\\\spacex_task\\\\src\\\\components\\\\MainContent\\\\ShipmentInformationBlock\\\\ShipmentInformationBlock.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport \"./ShipmentInformationBlock.scss\";\nimport { useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ShipmentInformationBlock = () => {\n  _s();\n  const companyName = useSelector(state => state.name);\n  const companyEmail = useSelector(state => state.email);\n  const companyBoxes = useSelector(state => state.boxes);\n  let cargoBaysRequiredAsStringsArr = companyBoxes.split(/[,]/);\n  let cargoBaysRequiredAsFloatsArr = cargoBaysRequiredAsStringsArr.map(parseFloat);\n  let cargoBaysRequired = null;\n  const convertNumbersToCargoBays = input => {\n    console.log(cargoBaysRequiredAsFloatsArr);\n    let splitCurrentArray = input.split(/[,]/);\n    let newArray = splitCurrentArray.map(parseFloat);\n    const sumArray = arr => arr.reduce((a, b) => a + Number(b), 0);\n    const roundedNumber = Math.ceil(sumArray(newArray, 1));\n    return Math.ceil(roundedNumber / 10, 1);\n  };\n  const calculateCargoBays = event => {\n    let userInput = event.target.value;\n    console.log(userInput);\n    if (isNaN(convertNumbersToCargoBays(userInput))) {\n      console.log(\"ERROR\");\n    } else {\n      cargoBaysRequired = convertNumbersToCargoBays(userInput);\n      return cargoBaysRequired;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"shipmentinfo-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: companyName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: companyEmail\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"CARGO BOXES\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: calculateCargoBays,\n      type: \"text\",\n      defaultValue: companyBoxes\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Number of required cargo bays\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: cargoBaysRequired\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(ShipmentInformationBlock, \"/gKGsE7QVJxnTnz5BlYeSTQ6Nno=\", false, function () {\n  return [useSelector, useSelector, useSelector];\n});\n_c = ShipmentInformationBlock;\nexport default ShipmentInformationBlock;\nvar _c;\n$RefreshReg$(_c, \"ShipmentInformationBlock\");","map":{"version":3,"names":["React","useSelector","jsxDEV","_jsxDEV","ShipmentInformationBlock","_s","companyName","state","name","companyEmail","email","companyBoxes","boxes","cargoBaysRequiredAsStringsArr","split","cargoBaysRequiredAsFloatsArr","map","parseFloat","cargoBaysRequired","convertNumbersToCargoBays","input","console","log","splitCurrentArray","newArray","sumArray","arr","reduce","a","b","Number","roundedNumber","Math","ceil","calculateCargoBays","event","userInput","target","value","isNaN","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","type","defaultValue","_c","$RefreshReg$"],"sources":["C:/Users/Vadim/React/spacex_task/spacex_task/src/components/MainContent/ShipmentInformationBlock/ShipmentInformationBlock.js"],"sourcesContent":["import React from \"react\";\r\nimport \"./ShipmentInformationBlock.scss\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst ShipmentInformationBlock = () => {\r\n  const companyName = useSelector((state) => state.name);\r\n  const companyEmail = useSelector((state) => state.email);\r\n  const companyBoxes = useSelector((state) => state.boxes);\r\n\r\n  let cargoBaysRequiredAsStringsArr = companyBoxes.split(/[,]/);\r\n  let cargoBaysRequiredAsFloatsArr =\r\n    cargoBaysRequiredAsStringsArr.map(parseFloat);\r\n  let cargoBaysRequired = null;\r\n\r\n  const convertNumbersToCargoBays = (input) => {\r\n    console.log(cargoBaysRequiredAsFloatsArr);\r\n\r\n    let splitCurrentArray = input.split(/[,]/);\r\n    let newArray = splitCurrentArray.map(parseFloat);\r\n    const sumArray = (arr) => arr.reduce((a, b) => a + Number(b), 0);\r\n    const roundedNumber = Math.ceil(sumArray(newArray, 1));\r\n    return Math.ceil(roundedNumber / 10, 1);\r\n  };\r\n\r\n  const calculateCargoBays = (event) => {\r\n    let userInput = event.target.value;\r\n\r\n    console.log(userInput);\r\n\r\n    if (isNaN(convertNumbersToCargoBays(userInput))) {\r\n      console.log(\"ERROR\");\r\n    } else {\r\n      cargoBaysRequired = convertNumbersToCargoBays(userInput);\r\n      return cargoBaysRequired;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"shipmentinfo-container\">\r\n      <h1>{companyName}</h1>\r\n      <h4>{companyEmail}</h4>\r\n      <h3>CARGO BOXES</h3>\r\n      <input\r\n        onChange={calculateCargoBays}\r\n        type=\"text\"\r\n        defaultValue={companyBoxes}\r\n      />\r\n      <h2>Number of required cargo bays</h2>\r\n      <label>{cargoBaysRequired}</label>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ShipmentInformationBlock;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}