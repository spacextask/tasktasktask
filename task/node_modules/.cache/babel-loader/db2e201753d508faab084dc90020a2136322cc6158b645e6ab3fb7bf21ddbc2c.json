{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vadim\\\\React\\\\spacex_task\\\\spacex_task\\\\src\\\\components\\\\MainContent\\\\ShipmentInformationBlock\\\\ShipmentInformationBlock.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport \"./ShipmentInformationBlock.scss\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport store from \"../../../reducers/ShipmentReducer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ShipmentInformationBlock = () => {\n  _s();\n  let [cargoBaysRequired, setCargoBaysRequired] = useState(0);\n  let [initialCompanyBoxes, setInitialCompanyBoxes] = useState(\"\");\n\n  // let [boxes, setBoxes] = useState(0);\n\n  const companyName = useSelector(state => state.name);\n  const companyEmail = useSelector(state => state.email);\n  const companyBoxes = useSelector(state => state.boxes);\n  const dispatch = useDispatch(store);\n  console.log(companyName, companyEmail, companyBoxes);\n\n  // let cargoBaysRequiredAsStringsArr = companyBoxes.split(/[,]/);\n  // let cargoBaysRequiredAsFloatsArr =\n  //   cargoBaysRequiredAsStringsArr.map(parseFloat);\n\n  useEffect(() => {\n    console.log(\"useEffect: \", companyName, companyBoxes);\n    // dispatch({\n    //   type: \"SWITCH_SHIPMENT_INFO\",\n    //   value: [companyName, companyEmail, companyBoxes],\n    // });\n    initialCompanyBoxes = companyBoxes;\n\n    // setInitialCompanyBoxes(initialCompanyBoxes);\n    setCargoBaysRequired(convertNumbersToCargoBays(companyBoxes));\n  }, [companyName, companyBoxes]);\n  const boxHandler = () => {};\n  const convertNumbersToCargoBays = input => {\n    const splitCurrentArray = input.split(/[,]/);\n    const newArray = splitCurrentArray.map(parseFloat);\n    const sumArray = arr => arr.reduce((a, b) => a + Number(b), 0);\n    const roundedNumber = Math.ceil(sumArray(newArray, 1));\n    return Math.ceil(roundedNumber / 10, 1);\n  };\n  const calculateCargoBays = event => {\n    const userInput = event.target.value;\n    console.log(\"userInput: \", userInput);\n    if (isNaN(convertNumbersToCargoBays(userInput))) {\n      console.log(\"ERROR\");\n    } else {\n      cargoBaysRequired = convertNumbersToCargoBays(userInput);\n      console.log(\"requred: \", cargoBaysRequired);\n      setCargoBaysRequired(cargoBaysRequired);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: companyName ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"shipmentinfo-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: companyName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: companyEmail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"CARGO BOXES\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: calculateCargoBays,\n        type: \"text\",\n        defaultValue: initialCompanyBoxes\n        // value={companyBoxes}\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Number of required cargo bays\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: cargoBaysRequired\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"shipmentinfo-container\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n_s(ShipmentInformationBlock, \"xBNm3WPs7tUG86IHexxa+YQQM3I=\", false, function () {\n  return [useSelector, useSelector, useSelector, useDispatch];\n});\n_c = ShipmentInformationBlock;\nexport default ShipmentInformationBlock;\nvar _c;\n$RefreshReg$(_c, \"ShipmentInformationBlock\");","map":{"version":3,"names":["React","useEffect","useState","useSelector","useDispatch","store","jsxDEV","_jsxDEV","Fragment","_Fragment","ShipmentInformationBlock","_s","cargoBaysRequired","setCargoBaysRequired","initialCompanyBoxes","setInitialCompanyBoxes","companyName","state","name","companyEmail","email","companyBoxes","boxes","dispatch","console","log","convertNumbersToCargoBays","boxHandler","input","splitCurrentArray","split","newArray","map","parseFloat","sumArray","arr","reduce","a","b","Number","roundedNumber","Math","ceil","calculateCargoBays","event","userInput","target","value","isNaN","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onChange","type","defaultValue","_c","$RefreshReg$"],"sources":["C:/Users/Vadim/React/spacex_task/spacex_task/src/components/MainContent/ShipmentInformationBlock/ShipmentInformationBlock.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport \"./ShipmentInformationBlock.scss\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport store from \"../../../reducers/ShipmentReducer\";\r\n\r\nconst ShipmentInformationBlock = () => {\r\n  let [cargoBaysRequired, setCargoBaysRequired] = useState(0);\r\n  let [initialCompanyBoxes, setInitialCompanyBoxes] = useState(\"\");\r\n\r\n  // let [boxes, setBoxes] = useState(0);\r\n\r\n  const companyName = useSelector((state) => state.name);\r\n  const companyEmail = useSelector((state) => state.email);\r\n  const companyBoxes = useSelector((state) => state.boxes);\r\n\r\n  const dispatch = useDispatch(store);\r\n\r\n  console.log(companyName, companyEmail, companyBoxes);\r\n\r\n  // let cargoBaysRequiredAsStringsArr = companyBoxes.split(/[,]/);\r\n  // let cargoBaysRequiredAsFloatsArr =\r\n  //   cargoBaysRequiredAsStringsArr.map(parseFloat);\r\n\r\n  useEffect(() => {\r\n    console.log(\"useEffect: \", companyName, companyBoxes);\r\n    // dispatch({\r\n    //   type: \"SWITCH_SHIPMENT_INFO\",\r\n    //   value: [companyName, companyEmail, companyBoxes],\r\n    // });\r\n    initialCompanyBoxes = companyBoxes;\r\n    \r\n    // setInitialCompanyBoxes(initialCompanyBoxes);\r\n    setCargoBaysRequired(convertNumbersToCargoBays(companyBoxes));\r\n  }, [companyName, companyBoxes]);\r\n\r\n  const boxHandler = () => {\r\n\r\n  }\r\n\r\n  const convertNumbersToCargoBays = (input) => {\r\n    const splitCurrentArray = input.split(/[,]/);\r\n    const newArray = splitCurrentArray.map(parseFloat);\r\n    const sumArray = (arr) => arr.reduce((a, b) => a + Number(b), 0);\r\n    const roundedNumber = Math.ceil(sumArray(newArray, 1));\r\n    return Math.ceil(roundedNumber / 10, 1);\r\n  };\r\n\r\n  const calculateCargoBays = (event) => {\r\n    const userInput = event.target.value;\r\n\r\n    console.log(\"userInput: \", userInput);\r\n\r\n    if (isNaN(convertNumbersToCargoBays(userInput))) {\r\n      console.log(\"ERROR\");\r\n    } else {\r\n      cargoBaysRequired = convertNumbersToCargoBays(userInput);\r\n      console.log(\"requred: \", cargoBaysRequired);\r\n      setCargoBaysRequired(cargoBaysRequired);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {companyName ? (\r\n        <div className=\"shipmentinfo-container\">\r\n          <h1>{companyName}</h1>\r\n          <h4>{companyEmail}</h4>\r\n          <h3>CARGO BOXES</h3>\r\n          <input\r\n            onChange={calculateCargoBays}\r\n            type=\"text\"\r\n            defaultValue={initialCompanyBoxes}\r\n            // value={companyBoxes}\r\n          />\r\n          <h2>Number of required cargo bays</h2>\r\n          <label>{cargoBaysRequired}</label>\r\n        </div>\r\n      ) : (\r\n        <div className=\"shipmentinfo-container\"></div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ShipmentInformationBlock;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}